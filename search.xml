<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F10%2F28%2Fsql%20basic%2F</url>
    <content type="text"><![CDATA[title:SQL基础学习简单的总结（一）— #SQL基础学习简单的总结（一） #数据库操作 建立一个新数据库：create database 数据库名 指定当前数据库：database 数据库名 关闭当前数据库：close database 数据库名 撤消一个数据库：drop database 数据库名 #基本表 ##基本表的定义（CREATE） 12345678910111213create table 表名（ 列名 数据类型 [default 缺省值] [not null] [，列名 数据类型 [default 缺省值] [not null]] …… [，primary key（列名 [，列名] …）] [，foreign key （列名 [，列名] …） references 表名 （列名 [，列名] …）] [，check（条件）] ) ``` &lt;/pre&gt; 例：&lt;pre&gt; create table PROF ( PNO char(10), PNAME char(20) not null, SAL int, AGE int, DNO char(10), primary key (PNO), foreign key (DNO) references DEPT(DNO), check (SAL > 0)) 123456789&lt;/pre&gt;##修改基本表定义（ALTER） 格式： &lt;pre&gt; ``` ALTER TABLE &lt;表名&gt; [ ADD &lt;新列名&gt; &lt;数据类型&gt; [ 完整性约束 ] ] --增加新列 [ DROP &lt;列名、完整性约束名&gt; ] --删除列 [ ALTER COLUMN&lt;列名&gt; &lt;数据类型&gt; ]； --修改列定义 ##撤消基本表定义（drop） 格式： `drop table 表名 ［RESTRICT| CASCADE］；` RESTRICT：缺省，如果存在依赖该表的对象，则此表不能被删除 CASCADE：在删除基本表的同时，相关的依赖对象一起删除 #索引 ##索引的定义 格式: 12create [unique|distinct] [cluster] index 索引名 on 表名 (列名 [asc|desc] [ , 列名[asc|desc]]…) unique|distinct：唯一性索引，不允许表中不同的行在 索引列上取相同值。 cluster：聚集索引，表中元组按索引项的值排序并物 理地聚集在一起。一个基本表上只能建一个聚集索引。 asc|desc：索引表中索引值的排序次序，缺省为asc。 ###在最经常查询的列上建立聚簇索引以提高查询效率。 经常更新的列不宜建立聚簇索引。 ##索引的删除 格式： `drop index 索引名` #数据查询 ##单表查询 1234567SELECT [ALL|DISTINCT] &lt;目标列表达式&gt; [，&lt;目标列表达式&gt;] … FROM &lt;表名或视图名&gt;[， &lt;表名或视图名&gt; ] … [ WHERE &lt;条件表达式&gt; ] [ GROUP BY &lt;列名1&gt; [ HAVING &lt;条件表达式&gt; ] ] [ ORDER BY &lt;列名2&gt; [ ASC|DESC ] ]；ALL：缺省，显示结果不删除重复行DISTINCT：显示结果删除重复行 ###更名运算： 1old_name as new_name(as可省略) ###Like 四种匹配模式： 1、%：表示任意0个或多个字符。可匹配任意类型和长度的字符。 `SELECT * FROM [user] WHERE u_name LIKE 'k%'` 2、\_： 表示任意单个字符。匹配单个任意字符，它常用来限定表达式的字符长度语句： `SELECT * FROM [user] WHERE u_name LIKE 'k_'` 3、[ ]：表示括号内所列字符中的一个（类似正则表达式）。指定一个字符、字符串或范围，要求所匹配对象为它们中的任一个。 `SELECT * FROM [user] WHERE u_name LIKE '[赵钱孙李]小明'` 4、[^ ] ：表示不在括号所列之内的单个字符。其取值和 [] 相同，但它要求所匹配对象为指定字符以外的任一个字符。 `SELECT * FROM [user] WHERE u_name LIKE '[^赵钱孙李]小明'` 定义转义字符，以去掉特殊字符的特定含义，使其被作为普通字符看待。 可用\%去匹配 %，用\＿去匹配＿，用\ \去匹配 \ `LIKE 'DB\ Design' ESCAPE '\'` ESCAPE ‘＼’ 表示“ ＼” 为换码字符 ###order by排序 `order by 列名 [asc | desc]; ` 可以按一个或多个属性列排序 升序：ASC；降序：DESC；缺省值为升序 ###聚集函数： 计数 COUNT（[DISTINCT|ALL] *） COUNT（[DISTINCT|ALL] ） 计算总和 SUM（[DISTINCT|ALL] ） 计算平均值 AVG（[DISTINCT|ALL] ） 最大值 MAX（[DISTINCT|ALL] ） > 最小值 MIN（[DISTINCT|ALL]]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
